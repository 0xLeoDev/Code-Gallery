[{"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\index.js":"1","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\App.js":"2","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\reportWebVitals.js":"3","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\NotFound.js":"4","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\HomePage.js":"5","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\Footer.js":"6","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\Navbar.js":"7","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\Arows.js":"8","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\Header.js":"9","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage01.js":"10","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage04.js":"11","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage03.js":"12","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage02.js":"13","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage05.js":"14","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch01.js":"15","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch02.js":"16","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch03.js":"17","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch04.js":"18","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch05.js":"19"},{"size":646,"mtime":1696538660874,"results":"20","hashOfConfig":"21"},{"size":1559,"mtime":1696864357248,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1696538660874,"results":"23","hashOfConfig":"21"},{"size":449,"mtime":1696538660850,"results":"24","hashOfConfig":"21"},{"size":2572,"mtime":1696538660835,"results":"25","hashOfConfig":"21"},{"size":1235,"mtime":1696866014761,"results":"26","hashOfConfig":"21"},{"size":1595,"mtime":1696538660850,"results":"27","hashOfConfig":"21"},{"size":990,"mtime":1696865916365,"results":"28","hashOfConfig":"21"},{"size":750,"mtime":1696538660874,"results":"29","hashOfConfig":"21"},{"size":1624,"mtime":1696865438829,"results":"30","hashOfConfig":"21"},{"size":1615,"mtime":1696864618302,"results":"31","hashOfConfig":"21"},{"size":3025,"mtime":1697117837529,"results":"32","hashOfConfig":"21"},{"size":1617,"mtime":1696864591002,"results":"33","hashOfConfig":"21"},{"size":1615,"mtime":1696940168697,"results":"34","hashOfConfig":"21"},{"size":3573,"mtime":1696865444571,"results":"35","hashOfConfig":"21"},{"size":2298,"mtime":1696864512681,"results":"36","hashOfConfig":"21"},{"size":6401,"mtime":1697213909970,"results":"37","hashOfConfig":"21"},{"size":1197,"mtime":1697053712059,"results":"38","hashOfConfig":"21"},{"size":1195,"mtime":1697053725427,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1o26gnn",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"43"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"43"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"43"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"43"},"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\index.js",[],[],["108"],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\App.js",[],[],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\reportWebVitals.js",[],[],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\NotFound.js",[],[],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\HomePage.js",[],[],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\Footer.js",[],[],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\Navbar.js",[],[],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\Arows.js",["109","110"],[],"import \"./Arows.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction Arows(props) {\r\n  const navigate = useNavigate();\r\n  let pathLeft = props.pathLeft;\r\n  let pathRight = props.pathRight;\r\n\r\n  // useEffect(() => {\r\n  //   const onKeyDown = ({ key }) => {\r\n  //     if (key === \"ArrowRight\") {\r\n  //       navigate(pathRight);\r\n  //     }\r\n  //     if (key === \"ArrowLeft\") {\r\n  //       navigate(pathLeft);\r\n  //     }\r\n  //   };\r\n\r\n  //   document.addEventListener(\"keydown\", onKeyDown);\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        title={pathLeft}\r\n        onClick={() => navigate(pathLeft)}\r\n        className=\"arrowLeft\"\r\n      >\r\n        <div className=\"arrow\"></div>\r\n      </div>\r\n      <div\r\n        title={pathRight}\r\n        onClick={() => navigate(pathRight)}\r\n        className=\"arrowRight\"\r\n      >\r\n        <div className=\"arrow\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Arows;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\Header.js",[],[],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage01.js",["111","112","113"],[],"import \"./Sketch.css\";\r\nimport Arows from \"../Arows.js\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Header from \"../Header\";\r\nimport Sketch01 from \"./Sketch01\";\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction SketchPage01(props) {\r\n  let pathLeft = \"/sketch-05\";\r\n  let pathRight = \"/sketch-02\";\r\n\r\n  const [navbarStatus, setNavbarStatus] = useState(false);\r\n\r\n  let canvasDataURI = useRef(\"\");\r\n  const saveDataURIinParrent = (canvas) => {\r\n    const dataURI = canvas.toDataURL(\"image / png\");\r\n    canvasDataURI = dataURI;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header setNavbarStatus={setNavbarStatus} />\r\n      <Arows pathLeft={pathLeft} pathRight={pathRight} />\r\n      <div className=\"App\">\r\n        <div className=\"canvas\">\r\n          <Sketch01 saveDataURIinParrent={saveDataURIinParrent} />\r\n        </div>\r\n        {navbarStatus == true && (\r\n          <div className=\"panel\">\r\n            <Navbar />\r\n          </div>\r\n        )}\r\n        {navbarStatus == false && (\r\n          <div className=\"panel\">\r\n            <h2 className=\"skethTitle\">sketch-01</h2>\r\n            <div className=\"optionsList\">\r\n              <h3>Option 1</h3>\r\n              <p>slider 1</p>\r\n              <h3>Option 2</h3>\r\n              <p>option 2</p>\r\n              <h3>Option 3</h3>\r\n              <p>option 3</p>\r\n              <h3>Option 4</h3>\r\n              <p>option 4</p>\r\n            </div>\r\n            <button onClick={() => props.saveAsPng(canvasDataURI)}>\r\n              save as png\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SketchPage01;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage04.js",["114","115"],[],"import \"./Sketch.css\";\r\nimport Arows from \"../Arows.js\";\r\nimport Header from \"../Header\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sketch04 from \"./Sketch04\";\r\n\r\nimport React, { useState, useRef } from \"react\";\r\n\r\nfunction SketchPage04(props) {\r\n  let pathLeft = \"/sketch-03\";\r\n  let pathRight = \"/sketch-05\";\r\n\r\n  const [navbarStatus, setNavbarStatus] = useState(false);\r\n\r\n  let canvasDataURI = useRef(\"\");\r\n  const saveDataURIinParrent = (canvas) => {\r\n    const dataURI = canvas.toDataURL(\"image / png\");\r\n    canvasDataURI = dataURI;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header setNavbarStatus={setNavbarStatus} />\r\n      <Arows pathLeft={pathLeft} pathRight={pathRight} />\r\n      <div className=\"App\">\r\n        <div className=\"canvas\">\r\n          <Sketch04 saveDataURIinParrent={saveDataURIinParrent} />\r\n        </div>\r\n        {navbarStatus == true && (\r\n          <div className=\"panel\">\r\n            <Navbar />\r\n          </div>\r\n        )}\r\n\r\n        {navbarStatus == false && (\r\n          <div className=\"panel\">\r\n            <h2 className=\"skethTitle\">sketch-04</h2>\r\n            <div className=\"optionsList\">\r\n              <h3>Option 1</h3>\r\n              <p>slider 1</p>\r\n              <h3>Option 2</h3>\r\n              <p>option 2</p>\r\n              <h3>Option 3</h3>\r\n              <p>option 3</p>\r\n              <h3>Option 4</h3>\r\n              <p>option 4</p>\r\n            </div>\r\n            <button onClick={() => props.saveAsPng(canvasDataURI)}>\r\n              save as png\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SketchPage04;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage03.js",["116","117"],[],"import \"./Sketch.css\";\r\nimport Arows from \"../Arows.js\";\r\nimport Header from \"../Header\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sketch03 from \"./Sketch03\";\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport { Slider, Stack, Switch } from \"@mui/material\";\r\n\r\nfunction SketchPage03(props) {\r\n  let pathLeft = \"/sketch-02\";\r\n  let pathRight = \"/sketch-04\";\r\n\r\n  const [navbarStatus, setNavbarStatus] = useState(false);\r\n\r\n  let canvasDataURI = useRef(\"\");\r\n  const saveDataURIinParrent = (canvas) => {\r\n    const dataURI = canvas.toDataURL(\"image / png\");\r\n    canvasDataURI = dataURI;\r\n  };\r\n\r\n  let value = 10;\r\n\r\n  let bounce = false; // it might be better to use traditona variables useState when changed couse rerendering the pagae\r\n\r\n  const handleSwitchBounceChange = () => {\r\n    bounce = !bounce;\r\n    //  setBounce((prevBounce) => !prevBounce);\r\n    alert(bounce);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header setNavbarStatus={setNavbarStatus} />\r\n      <Arows pathLeft={pathLeft} pathRight={pathRight} />\r\n      <div className=\"App\">\r\n        <div className=\"canvas\">\r\n          <Sketch03 saveDataURIinParrent={saveDataURIinParrent} />\r\n        </div>\r\n        {navbarStatus == true && (\r\n          <div className=\"panel\">\r\n            <Navbar />\r\n          </div>\r\n        )}\r\n        {navbarStatus == false && (\r\n          <div className=\"panel\">\r\n            <h2 className=\"skethTitle\">sketch-03</h2>\r\n            <div className=\"optionsList\">\r\n              <h3>Quantity</h3>\r\n              <Slider\r\n                color=\"secondary\"\r\n                defaultValue={value}\r\n                valueLabelDisplay=\"auto\"\r\n                min={1}\r\n                max={50}\r\n              />\r\n              <h3>Bounce or pass</h3>\r\n              <Stack\r\n                spacing={2}\r\n                direction=\"row\"\r\n                sx={{ justifyContent: \"center\", mb: 1 }}\r\n                alignItems=\"center\"\r\n              >\r\n                <p>bounce</p>\r\n                <Switch\r\n                  color=\"secondary\"\r\n                  onChange={handleSwitchBounceChange}\r\n                  defaultValue={bounce}\r\n                />{\" \"}\r\n                <p> pass</p>\r\n              </Stack>\r\n\r\n              <h3>Sppeed</h3>\r\n              <Slider\r\n                color=\"secondary\"\r\n                defaultValue={10}\r\n                valueLabelDisplay=\"auto\"\r\n                step={1}\r\n                marks\r\n                min={1}\r\n                max={20}\r\n              />\r\n              <h3>Line intensity</h3>\r\n              <Slider\r\n                color=\"secondary\"\r\n                defaultValue={40}\r\n                valueLabelDisplay=\"auto\"\r\n                step={10}\r\n                marks\r\n                min={0}\r\n                max={100}\r\n              />\r\n            </div>\r\n            <button onClick={() => props.saveAsPng(canvasDataURI)}>\r\n              save as png\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SketchPage03;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage02.js",["118","119"],[],"import \"./Sketch.css\";\r\nimport Arows from \"../Arows.js\";\r\nimport Header from \"../Header\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sketch02 from \"./Sketch02\";\r\n\r\nimport React, { useState, useRef } from \"react\";\r\n\r\nfunction SketchPage02(props) {\r\n  let pathLeft = \"/sketch-01\";\r\n  let pathRight = \"/sketch-03\";\r\n\r\n  const [navbarStatus, setNavbarStatus] = useState(false);\r\n\r\n  let canvasDataURI = useRef(\"\");\r\n  const saveDataURIinParrent = (canvas) => {\r\n    const dataURI = canvas.toDataURL(\"image / png\");\r\n    canvasDataURI = dataURI;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header setNavbarStatus={setNavbarStatus} />\r\n      <Arows pathLeft={pathLeft} pathRight={pathRight} />\r\n      <div className=\"App\">\r\n        <div className=\"canvas\">\r\n          <Sketch02 saveDataURIinParrent={saveDataURIinParrent} />\r\n        </div>\r\n\r\n        {navbarStatus == true && (\r\n          <div className=\"panel\">\r\n            <Navbar />\r\n          </div>\r\n        )}\r\n\r\n        {navbarStatus == false && (\r\n          <div className=\"panel\">\r\n            <h2 className=\"skethTitle\">sketch-02</h2>\r\n            <div className=\"optionsList\">\r\n              <h3>Option 1</h3>\r\n              <p>slider 1</p>\r\n              <h3>Option 2</h3>\r\n              <p>option 2</p>\r\n              <h3>Option 3</h3>\r\n              <p>option 3</p>\r\n              <h3>Option 4</h3>\r\n              <p>option 4</p>\r\n            </div>\r\n            <button onClick={() => props.saveAsPng(canvasDataURI)}>\r\n              save as png\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SketchPage02;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\SketchPage05.js",["120","121"],[],"import \"./Sketch.css\";\r\nimport Arows from \"../Arows.js\";\r\nimport Header from \"../Header\";\r\nimport Navbar from \"../Navbar.js\";\r\nimport Sketch05 from \"./Sketch05\";\r\n\r\nimport React, { useState, useRef } from \"react\";\r\n\r\nfunction SketchPage05(props) {\r\n  let pathLeft = \"/sketch-04\";\r\n  let pathRight = \"/sketch-01\";\r\n\r\n  const [navbarStatus, setNavbarStatus] = useState(false);\r\n\r\n  let canvasDataURI = useRef(\"\");\r\n  const saveDataURIinParrent = (canvas) => {\r\n    const dataURI = canvas.toDataURL(\"image / png\");\r\n    canvasDataURI = dataURI;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header setNavbarStatus={setNavbarStatus} />\r\n      <Arows pathLeft={pathLeft} pathRight={pathRight} />\r\n      <div className=\"App\">\r\n        <div className=\"canvas\">\r\n          <Sketch05 saveDataURIinParrent={saveDataURIinParrent} />\r\n        </div>\r\n        {navbarStatus == true && (\r\n          <div className=\"panel\">\r\n            <Navbar />\r\n          </div>\r\n        )}\r\n\r\n        {navbarStatus == false && (\r\n          <div className=\"panel\">\r\n            <h2 className=\"skethTitle\">sketch-05</h2>\r\n            <div className=\"optionsList\">\r\n              <h3>Option 1</h3>\r\n              <p>slider 1</p>\r\n              <h3>Option 2</h3>\r\n              <p>option 2</p>\r\n              <h3>Option 3</h3>\r\n              <p>option 3</p>\r\n              <h3>Option 4</h3>\r\n              <p>option 4</p>\r\n            </div>\r\n            <button onClick={() => props.saveAsPng(canvasDataURI)}>\r\n              save as png\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SketchPage05;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch01.js",["122","123","124","125","126","127","128","129","130","131","132","133"],[],"import React, { useRef, useEffect, useState } from \"react\";\r\nconst canvasSketch = require(\"canvas-sketch\");\r\nconst random = require(\"canvas-sketch-util/random\");\r\nconst math = require(\"canvas-sketch-util/math\");\r\n\r\nconst Sketch01 = (props) => {\r\n  const canvasRef01 = useRef(null);\r\n\r\n  const [dataURI, setDataURI] = useState(null);\r\n\r\n  const [numOfRec, setNumOfRec] = useState(6);\r\n  const [bacgroundColor, setBacgroundColor] = useState(\"#1a1a1a\");\r\n  const [lineColor, setLineColor] = useState();\r\n  const [decorativeColor, setDecorativeColor] = useState();\r\n\r\n  const draw = (context, canvas, width, height, numOfRec, bacgroundColor) => {\r\n    context.fillStyle = bacgroundColor;\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    let numOfGaps = numOfRec + 1;\r\n\r\n    let gapSize = 20;\r\n    let rectSize = (width - gapSize * numOfGaps) / numOfRec;\r\n\r\n    let randomiser = 0.3;\r\n\r\n    let droveRec = (x, y, size, color) => {\r\n      context.lineWidth = width * 0.005;\r\n      context.fillStyle = color;\r\n      context.beginPath();\r\n      context.fillRect(x, y, size, size);\r\n      context.rect(x, y, size, size);\r\n      context.strokeStyle = \"1a1a1a\";\r\n      context.stroke();\r\n    };\r\n\r\n    for (let i = 0; i < numOfRec; i++) {\r\n      for (let j = 0; j < numOfRec; j++) {\r\n        let x = gapSize + (rectSize + gapSize) * i;\r\n        let y = gapSize + (rectSize + gapSize) * j;\r\n        let color = \"#edf8e9\";\r\n        droveRec(x, y, rectSize, color);\r\n\r\n        let randomise = Math.random();\r\n        if (randomise > randomiser) {\r\n          let color = \"#Ff5f5f5\";\r\n          droveRec(\r\n            x + rectSize * 0.1,\r\n            y + rectSize * 0.1,\r\n            rectSize - rectSize * 0.2,\r\n            color\r\n          );\r\n\r\n          let randomise = Math.random();\r\n          if (randomise > randomiser) {\r\n            // let color = \"#74c476\";\r\n            droveRec(\r\n              x + rectSize * 0.2,\r\n              y + rectSize * 0.2,\r\n              rectSize - rectSize * 0.4,\r\n              color\r\n            );\r\n\r\n            let randomise = Math.random();\r\n            if (randomise > randomiser) {\r\n              // let color = \"\";\r\n              droveRec(\r\n                x + rectSize * 0.3,\r\n                y + rectSize * 0.3,\r\n                rectSize - rectSize * 0.6,\r\n                color\r\n              );\r\n\r\n              let randomise = Math.random();\r\n              if (randomise > randomiser) {\r\n                let color = \"red\";\r\n                droveRec(\r\n                  x + rectSize * 0.4,\r\n                  y + rectSize * 0.4,\r\n                  rectSize - rectSize * 0.8,\r\n                  color\r\n                );\r\n\r\n                if (randomise > randomiser) {\r\n                  let color = \"red\";\r\n\r\n                  droveRec(\r\n                    x + rectSize * 0.49,\r\n                    y + rectSize * 0.49,\r\n                    rectSize - rectSize * 0.98,\r\n                    color\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef01.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n    draw(context, canvas, width, height, numOfRec, bacgroundColor);\r\n    props.saveDataURIinParrent(canvas);\r\n  }, [draw]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef01}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      width={\"1080px\"}\r\n      height={\"1080px\"}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Sketch01;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch02.js",["134","135","136","137","138","139","140","141"],[],"import React, { useRef, useEffect, useState } from \"react\";\r\nconst canvasSketch = require(\"canvas-sketch\");\r\nconst random = require(\"canvas-sketch-util/random\");\r\nconst math = require(\"canvas-sketch-util/math\");\r\n\r\nconst Sketch02 = (props) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [numOfRec, setNumOfRec] = useState(4);\r\n  const [bacgroundColor, setBacgroundColor] = useState(\"#1a1a1a\");\r\n  const [lineColor, setLineColor] = useState();\r\n  const [decorativeColor, setDecorativeColor] = useState();\r\n\r\n  const draw = (context, canvas, width, height, numOfRec, bacgroundColor) => {\r\n    context.fillStyle = bacgroundColor;\r\n    context.fillRect(0, 0, width, height);\r\n\r\n    let cx = width * 0.5;\r\n    let cy = height * 0.5;\r\n\r\n    let w = width * 0.01;\r\n    let h = width * 0.1;\r\n\r\n    let quantity = 20;\r\n    let radius = width * 0.3;\r\n\r\n    for (let i = 0; i < quantity; i++) {\r\n      context.save();\r\n\r\n      let slice = math.degToRad(360 / quantity);\r\n      let angle = slice * i;\r\n\r\n      let x = cx + radius * Math.sin(angle);\r\n      let y = cy + radius * Math.cos(angle);\r\n\r\n      context.fillStyle = \"red\";\r\n      context.translate(x, y);\r\n      context.rotate(-angle);\r\n      context.scale(random.range(1, 3), random.range(0.5, 1.5));\r\n      context.beginPath();\r\n      context.rect(-w * 0.5, -h * 0.5, w, h);\r\n      context.fill();\r\n      context.restore();\r\n\r\n      context.save();\r\n      context.translate(cx, cy);\r\n      context.rotate(-angle);\r\n      context.lineWidth = random.range(5, 20);\r\n      context.strokeStyle = \"#f5f5f5\";\r\n      context.beginPath();\r\n      context.arc(\r\n        0,\r\n        0,\r\n        radius * random.range(0.6, 1.4),\r\n        slice * -0.3,\r\n        slice * 5\r\n      );\r\n      context.stroke();\r\n      context.restore();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n    draw(context, canvas, width, height, numOfRec, bacgroundColor);\r\n    props.saveDataURIinParrent(canvas);\r\n  }, [draw]);\r\n\r\n  return (\r\n    <canvas\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      width={\"1080px\"}\r\n      height={\"1080px\"}\r\n      ref={canvasRef}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Sketch02;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch03.js",["142","143","144","145"],[],"C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch04.js",["146","147","148","149","150","151","152","153"],[],"import React, { useRef, useEffect, useState } from \"react\";\r\nconst canvasSketch = require(\"canvas-sketch\");\r\nconst random = require(\"canvas-sketch-util/random\");\r\nconst math = require(\"canvas-sketch-util/math\");\r\n\r\nconst Sketch04 = (props) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [bacgroundColor, setBacgroundColor] = useState(\"yellow\");\r\n\r\n  const renderFrame = () => {\r\n    try {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext(\"2d\");\r\n      const width = canvas.width;\r\n      const height = canvas.height;\r\n\r\n      context.fillStyle = bacgroundColor;\r\n      context.fillRect(0, 0, width, height);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const initCanva = () => {\r\n    try {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext(\"2d\");\r\n      const width = canvas.width;\r\n      const height = canvas.height;\r\n\r\n      renderFrame();\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    initCanva();\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      width={\"1080px\"}\r\n      height={\"1080px\"}\r\n      ref={canvasRef}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Sketch04;\r\n","C:\\Users\\Mteusz\\Desktop\\Creative-Code\\src\\sketches\\Sketch05.js",["154","155","156","157","158","159","160","161"],[],"import React, { useRef, useEffect, useState } from \"react\";\r\nconst canvasSketch = require(\"canvas-sketch\");\r\nconst random = require(\"canvas-sketch-util/random\");\r\nconst math = require(\"canvas-sketch-util/math\");\r\n\r\nconst Sketch05 = (props) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [bacgroundColor, setBacgroundColor] = useState(\"blue\");\r\n\r\n  const renderFrame = () => {\r\n    try {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext(\"2d\");\r\n      const width = canvas.width;\r\n      const height = canvas.height;\r\n\r\n      context.fillStyle = bacgroundColor;\r\n      context.fillRect(0, 0, width, height);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const initCanva = () => {\r\n    try {\r\n      const canvas = canvasRef.current;\r\n      const context = canvas.getContext(\"2d\");\r\n      const width = canvas.width;\r\n      const height = canvas.height;\r\n\r\n      renderFrame();\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    initCanva();\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      width={\"1080px\"}\r\n      height={\"1080px\"}\r\n      ref={canvasRef}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Sketch05;\r\n",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":3,"column":17,"nodeType":"166","messageId":"167","endLine":3,"endColumn":26},{"ruleId":"164","severity":1,"message":"168","line":3,"column":28,"nodeType":"166","messageId":"167","endLine":3,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":7,"column":27,"nodeType":"166","messageId":"167","endLine":7,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":29,"column":23,"nodeType":"171","messageId":"172","endLine":29,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":34,"column":23,"nodeType":"171","messageId":"172","endLine":34,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":29,"column":23,"nodeType":"171","messageId":"172","endLine":29,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":35,"column":23,"nodeType":"171","messageId":"172","endLine":35,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":40,"column":23,"nodeType":"171","messageId":"172","endLine":40,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":45,"column":23,"nodeType":"171","messageId":"172","endLine":45,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":30,"column":23,"nodeType":"171","messageId":"172","endLine":30,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":36,"column":23,"nodeType":"171","messageId":"172","endLine":36,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":29,"column":23,"nodeType":"171","messageId":"172","endLine":29,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":35,"column":23,"nodeType":"171","messageId":"172","endLine":35,"endColumn":25},{"ruleId":"164","severity":1,"message":"173","line":2,"column":7,"nodeType":"166","messageId":"167","endLine":2,"endColumn":19},{"ruleId":"164","severity":1,"message":"174","line":3,"column":7,"nodeType":"166","messageId":"167","endLine":3,"endColumn":13},{"ruleId":"164","severity":1,"message":"175","line":4,"column":7,"nodeType":"166","messageId":"167","endLine":4,"endColumn":11},{"ruleId":"164","severity":1,"message":"176","line":9,"column":10,"nodeType":"166","messageId":"167","endLine":9,"endColumn":17},{"ruleId":"164","severity":1,"message":"177","line":9,"column":19,"nodeType":"166","messageId":"167","endLine":9,"endColumn":29},{"ruleId":"164","severity":1,"message":"178","line":11,"column":20,"nodeType":"166","messageId":"167","endLine":11,"endColumn":31},{"ruleId":"164","severity":1,"message":"179","line":12,"column":26,"nodeType":"166","messageId":"167","endLine":12,"endColumn":43},{"ruleId":"164","severity":1,"message":"180","line":13,"column":10,"nodeType":"166","messageId":"167","endLine":13,"endColumn":19},{"ruleId":"164","severity":1,"message":"181","line":13,"column":21,"nodeType":"166","messageId":"167","endLine":13,"endColumn":33},{"ruleId":"164","severity":1,"message":"182","line":14,"column":10,"nodeType":"166","messageId":"167","endLine":14,"endColumn":25},{"ruleId":"164","severity":1,"message":"183","line":14,"column":27,"nodeType":"166","messageId":"167","endLine":14,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":109,"column":6,"nodeType":"186","endLine":109,"endColumn":12,"suggestions":"187"},{"ruleId":"164","severity":1,"message":"173","line":2,"column":7,"nodeType":"166","messageId":"167","endLine":2,"endColumn":19},{"ruleId":"164","severity":1,"message":"178","line":9,"column":20,"nodeType":"166","messageId":"167","endLine":9,"endColumn":31},{"ruleId":"164","severity":1,"message":"179","line":10,"column":26,"nodeType":"166","messageId":"167","endLine":10,"endColumn":43},{"ruleId":"164","severity":1,"message":"180","line":11,"column":10,"nodeType":"166","messageId":"167","endLine":11,"endColumn":19},{"ruleId":"164","severity":1,"message":"181","line":11,"column":21,"nodeType":"166","messageId":"167","endLine":11,"endColumn":33},{"ruleId":"164","severity":1,"message":"182","line":12,"column":10,"nodeType":"166","messageId":"167","endLine":12,"endColumn":25},{"ruleId":"164","severity":1,"message":"183","line":12,"column":27,"nodeType":"166","messageId":"167","endLine":12,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":70,"column":6,"nodeType":"186","endLine":70,"endColumn":12,"suggestions":"188"},{"ruleId":"164","severity":1,"message":"168","line":2,"column":36,"nodeType":"166","messageId":"167","endLine":2,"endColumn":44},{"ruleId":"164","severity":1,"message":"173","line":3,"column":7,"nodeType":"166","messageId":"167","endLine":3,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":155,"column":20,"nodeType":"171","messageId":"172","endLine":155,"endColumn":22},{"ruleId":"184","severity":1,"message":"189","line":185,"column":6,"nodeType":"186","endLine":185,"endColumn":8,"suggestions":"190"},{"ruleId":"164","severity":1,"message":"173","line":2,"column":7,"nodeType":"166","messageId":"167","endLine":2,"endColumn":19},{"ruleId":"164","severity":1,"message":"174","line":3,"column":7,"nodeType":"166","messageId":"167","endLine":3,"endColumn":13},{"ruleId":"164","severity":1,"message":"175","line":4,"column":7,"nodeType":"166","messageId":"167","endLine":4,"endColumn":11},{"ruleId":"164","severity":1,"message":"179","line":9,"column":26,"nodeType":"166","messageId":"167","endLine":9,"endColumn":43},{"ruleId":"164","severity":1,"message":"191","line":26,"column":13,"nodeType":"166","messageId":"167","endLine":26,"endColumn":20},{"ruleId":"164","severity":1,"message":"192","line":27,"column":13,"nodeType":"166","messageId":"167","endLine":27,"endColumn":18},{"ruleId":"164","severity":1,"message":"193","line":28,"column":13,"nodeType":"166","messageId":"167","endLine":28,"endColumn":19},{"ruleId":"184","severity":1,"message":"189","line":36,"column":6,"nodeType":"186","endLine":36,"endColumn":8,"suggestions":"194"},{"ruleId":"164","severity":1,"message":"173","line":2,"column":7,"nodeType":"166","messageId":"167","endLine":2,"endColumn":19},{"ruleId":"164","severity":1,"message":"174","line":3,"column":7,"nodeType":"166","messageId":"167","endLine":3,"endColumn":13},{"ruleId":"164","severity":1,"message":"175","line":4,"column":7,"nodeType":"166","messageId":"167","endLine":4,"endColumn":11},{"ruleId":"164","severity":1,"message":"179","line":9,"column":26,"nodeType":"166","messageId":"167","endLine":9,"endColumn":43},{"ruleId":"164","severity":1,"message":"191","line":26,"column":13,"nodeType":"166","messageId":"167","endLine":26,"endColumn":20},{"ruleId":"164","severity":1,"message":"192","line":27,"column":13,"nodeType":"166","messageId":"167","endLine":27,"endColumn":18},{"ruleId":"164","severity":1,"message":"193","line":28,"column":13,"nodeType":"166","messageId":"167","endLine":28,"endColumn":19},{"ruleId":"184","severity":1,"message":"189","line":36,"column":6,"nodeType":"186","endLine":36,"endColumn":8,"suggestions":"195"},"no-new-object",["196"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'canvasSketch' is assigned a value but never used.","'random' is assigned a value but never used.","'math' is assigned a value but never used.","'dataURI' is assigned a value but never used.","'setDataURI' is assigned a value but never used.","'setNumOfRec' is assigned a value but never used.","'setBacgroundColor' is assigned a value but never used.","'lineColor' is assigned a value but never used.","'setLineColor' is assigned a value but never used.","'decorativeColor' is assigned a value but never used.","'setDecorativeColor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bacgroundColor', 'numOfRec', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["197"],["198"],"React Hook useEffect has a missing dependency: 'initCanva'. Either include it or remove the dependency array.",["199"],"'context' is assigned a value but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.",["200"],["201"],"no-object-constructor",{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},{"desc":"205","fix":"206"},{"desc":"205","fix":"207"},{"desc":"205","fix":"208"},"Update the dependencies array to be: [bacgroundColor, draw, numOfRec, props]",{"range":"209","text":"210"},{"range":"211","text":"210"},"Update the dependencies array to be: [initCanva]",{"range":"212","text":"213"},{"range":"214","text":"213"},{"range":"215","text":"213"},[3349,3355],"[bacgroundColor, draw, numOfRec, props]",[2076,2082],[5338,5340],"[initCanva]",[979,981],[977,979]]