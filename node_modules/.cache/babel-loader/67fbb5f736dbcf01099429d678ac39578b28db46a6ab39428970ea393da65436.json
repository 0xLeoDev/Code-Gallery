{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mteusz\\\\Creative-Code\\\\src\\\\Header.js\",\n  _s = $RefreshSig$();\nimport \"./Header.css\";\nimport { Turn as Hamburger } from \"hamburger-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header(props) {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        title: \"homepage\",\n        className: \"logo\",\n        onClick: () => navigate(\"/\"),\n        children: \"code gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        title: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(Hamburger, {\n          color: \"#f5f5f5\",\n          onToggle: toggled => {\n            if (toggled) {\n              props.setNavbarStatus(true);\n            } else {\n              props.setNavbarStatus(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Header, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Turn","Hamburger","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","props","_s","navigate","children","className","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","color","onToggle","toggled","setNavbarStatus","_c","$RefreshReg$"],"sources":["C:/Users/Mteusz/Creative-Code/src/Header.js"],"sourcesContent":["import \"./Header.css\";\r\nimport { Turn as Hamburger } from \"hamburger-react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div title=\"homepage\" className=\"logo\" onClick={() => navigate(\"/\")}>\r\n          code gallery\r\n        </div>\r\n        <div title=\"navbar\">\r\n          <Hamburger\r\n            color=\"#f5f5f5\"\r\n            onToggle={(toggled) => {\r\n              if (toggled) {\r\n                props.setNavbarStatus(true);\r\n              } else {\r\n                props.setNavbarStatus(false);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,SAASA,IAAI,IAAIC,SAAS,QAAQ,iBAAiB;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,oBACEE,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA;MAAKQ,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBP,OAAA;QAAKS,KAAK,EAAC,UAAU;QAACD,SAAS,EAAC,MAAM;QAACE,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAAC,GAAG,CAAE;QAAAC,QAAA,EAAC;MAErE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNd,OAAA;QAAKS,KAAK,EAAC,QAAQ;QAAAF,QAAA,eACjBP,OAAA,CAACH,SAAS;UACRkB,KAAK,EAAC,SAAS;UACfC,QAAQ,EAAGC,OAAO,IAAK;YACrB,IAAIA,OAAO,EAAE;cACXb,KAAK,CAACc,eAAe,CAAC,IAAI,CAAC;YAC7B,CAAC,MAAM;cACLd,KAAK,CAACc,eAAe,CAAC,KAAK,CAAC;YAC9B;UACF;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACT,EAAA,CAxBQF,MAAM;EAAA,QACIL,WAAW;AAAA;AAAAqB,EAAA,GADrBhB,MAAM;AA0Bf,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}